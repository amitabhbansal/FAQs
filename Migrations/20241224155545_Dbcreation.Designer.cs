// <auto-generated />
using FAQs.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FAQs.Migrations
{
    [DbContext(typeof(FaqsContext))]
    [Migration("20241224155545_Dbcreation")]
    partial class Dbcreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FAQs.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = "gen",
                            Name = "General"
                        },
                        new
                        {
                            CategoryId = "hist",
                            Name = "History"
                        });
                });

            modelBuilder.Entity("FAQs.Models.FAQ", b =>
                {
                    b.Property<int>("FAQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAQId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FAQId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TopicId");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            FAQId = 1,
                            Answer = "trjuy",
                            CategoryId = "gen",
                            Question = "What is ASP.NET Core?",
                            TopicId = "asp"
                        },
                        new
                        {
                            FAQId = 2,
                            Answer = "1995",
                            CategoryId = "hist",
                            Question = "When was ASP.NET Core built?",
                            TopicId = "asp"
                        },
                        new
                        {
                            FAQId = 3,
                            Answer = "wgreg",
                            CategoryId = "gen",
                            Question = "What is Blazor",
                            TopicId = "blz"
                        },
                        new
                        {
                            FAQId = 4,
                            Answer = "2006",
                            CategoryId = "hist",
                            Question = "When was Blazor released?",
                            TopicId = "blz"
                        },
                        new
                        {
                            FAQId = 5,
                            Answer = "wgrefdgzrgbg",
                            CategoryId = "gen",
                            Question = "What is Entity Framework?",
                            TopicId = "ef"
                        },
                        new
                        {
                            FAQId = 6,
                            Answer = "2010",
                            CategoryId = "hist",
                            Question = "When was Entity Framework released?",
                            TopicId = "ef"
                        });
                });

            modelBuilder.Entity("FAQs.Models.Topic", b =>
                {
                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.ToTable("Topic");

                    b.HasData(
                        new
                        {
                            TopicId = "asp",
                            Name = "ASP.NET Core"
                        },
                        new
                        {
                            TopicId = "blz",
                            Name = "Blazor"
                        },
                        new
                        {
                            TopicId = "ef",
                            Name = "Entity Framework"
                        });
                });

            modelBuilder.Entity("FAQs.Models.FAQ", b =>
                {
                    b.HasOne("FAQs.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FAQs.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Topic");
                });
#pragma warning restore 612, 618
        }
    }
}
